# 整数 N ,K が与えられるので、規則的な無限数列 A = [1 , 0 , -1 , 1 , 0 , -1 , ... ] の N 要素目から K 要素目までの和を求めてください。　
# 素直に繰り返しで A の要素の足し算を行おうとすると、最大 10 ^ 12 回ループが回ることになってしまい、実行制限時間に間に合いません。そこで計算の工夫を行います。
# 数列 A の規則性に注目します。 A の連続する 3 つの要素の和は必ず 0 になります。そのため、N 項目から 3 要素ずつ区切っていき、最後に残った要素の和が答えとなります。
# 最後に残る要素は 0 要素 〜 2 要素であり、その要素は N , K を 3 で割った余りによって定まるので、N%3 , K%3 について場合分けを行うことで答えを求めることができます。

input = gets.chomp.split(" ").map(&:to_i)
n = input[0]
k = input[1]

if n % 3 == 1
  if k % 3 == 0
    sum = 0
  else
    sum = 1
  end
elsif n % 3 == 2
  if k % 3 == 0
    sum = -1
  else
    sum = 0
  end
elsif n % 3 == 0
  if k % 3 == 0
    sum = -1
  elsif k % 3 == 1
    sum = 0
  elsif k % 3 == 2
    sum = 0
  end
end

p sum
